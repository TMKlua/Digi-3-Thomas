{% extends 'base.html.twig' %}

{% block title %}Digi 3 - Gestion Projets{% endblock %}

{% block body %}

{% include 'includes/header.html.twig' %}

<div class="project-management-container">
    <aside class="parameter_menu">
        <h3>Liste des projets</h3>
                <button class="create-project-button" onclick="showCreateForm()">Créer un projet</button>
        <ul>
            {% for project in projects %}
            <li class="{{ current_project and current_project.id == project.id ? 'active' : '' }}">
                <a href="{{ path('app_management_project', { 'id': project.id }) }}">
                    {{ project.name }}
                </a>
                <button type="button" class="delete-button" onclick="showDeletePopup({{ project.id }})">
                    <img src="/img/delete.png" alt="Supprimer" class="delete-icon">
                </button>
            </li>
            {% endfor %}
        </ul>
    </aside>
      
    <main class="project-details">
        {% if current_project %}
            <h2><i class="fas fa-project-diagram"></i> {{ current_project.name }}</h2>
            <p>{{ current_project.description }}</p>

            <div class="project-dates">
                <div>
                    <i class="fas fa-calendar-alt"></i> <span>Début prévisionnel :</span> {{ current_project.getStartDateForecast() ? current_project.getStartDateForecast().format('d-m-Y') : 'Non défini' }}
                    <i class="fas fa-calendar-check"></i> <span>Début réel :</span> <span class="real">{{ current_project.getStartDate() ? current_project.getStartDate().format('d-m-Y') : 'Non défini' }}</span>
                </div>
                <div>
                    <i class="fas fa-calendar-alt"></i> <span>Fin prévisionnelle :</span> {{ current_project.getEndDateForecast() ? current_project.getEndDateForecast().format('d-m-Y') : 'Non défini' }}
                    <i class="fas fa-calendar-check"></i> <span>Fin réelle :</span> <span class="real">{{ current_project.getEndDate() ? current_project.getEndDate().format('d-m-Y') : 'Non défini' }}</span>
                </div>
            </div>

            <div>
                <label><i class="fas fa-user"></i> Chef de projet :</label>
                <span>{{ app.user ? app.user.userFirstName() ~ ' ' ~ app.user.userLastName() : 'Non défini' }}</span>
                <br>           
                <button class="add-task-button" onclick="showTaskForm()">
                    <i class="fas fa-tasks"></i> Créer une tâche
                </button>
                {% if current_project %}
                <div id="createTaskForm" style="display: none;" class="styled-form">
                    {{ form_start(taskForm) }}
                        {{ form_row(taskForm.taskName) }}
                        {{ form_row(taskForm.taskDescription) }}
                        {{ form_row(taskForm.taskType) }}
                        {{ form_row(taskForm.taskStatus) }}
                        {{ form_row(taskForm.taskCategory) }}
                        {{ form_row(taskForm.taskAttachments) }}
                        {{ form_row(taskForm.taskDateFrom) }}
                        {{ form_row(taskForm.taskDateTo) }}
                        <button type="submit">Ajouter la tâche</button>
                    {{ form_end(taskForm) }}
                </div>
                {% endif %}
            </div>

            <br>

            <div class="kanban-board" id="kanbanBoard">
                <div class="kanban-column" data-column="a-faire">
                    <h3>À faire</h3>
                    <div class="kanban-tasks" data-column-id="a-faire">
                        {% for task in current_project.tasks %}
                            {% if task.taskColumnRank == 1 %}
                                <div class="task-card" id="task-{{ task.id }}" data-task-id="{{ task.id }}" data-rank="{{ task.taskRank }}" draggable="true" data-column="{{ task.taskColumnRank }}">
                                    <h4>{{ task.taskName }}</h4>
                                    <div class="task-info">
                                        <p><strong>Description :</strong> {{ task.taskDescription }}</p>
                                        <p><strong>Type :</strong> {{ task.taskType }}</p>
                                        <p><strong>Rang :</strong> {{ task.taskRank }}</p>
                                        <p><strong>Date de début :</strong> <span>{{ task.taskDateFrom ? task.taskDateFrom.format('d-m-Y') : 'Non définie' }}</span></p>
                                        <p><strong>Date de fin :</strong> <span>{{ task.taskDateTo ? task.taskDateTo.format('d-m-Y') : 'Non définie' }}</span></p>
                                    </div>
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>

                <div class="kanban-column" data-column="bloque">
                    <h3>Bloqué</h3>
                    <div class="kanban-tasks" data-column-id="bloque">
                        {% for task in current_project.tasks %}
                            {% if task.taskColumnRank == 2 %}
                                <div class="task-card" id="task-{{ task.id }}" data-task-id="{{ task.id }}" data-rank="{{ task.taskRank }}" draggable="true" data-column="{{ task.taskColumnRank }}">
                                    <h4>{{ task.taskName }}</h4>
                                    <div class="task-info">
                                        <p><strong>Description :</strong> {{ task.taskDescription }}</p>
                                        <p><strong>Type :</strong> {{ task.taskType }}</p>
                                        <p><strong>Rang :</strong> {{ task.taskRank }}</p>
                                        <p><strong>Date de début :</strong> <span>{{ task.taskDateFrom ? task.taskDateFrom.format('d-m-Y') : 'Non définie' }}</span></p>
                                        <p><strong>Date de fin :</strong> <span>{{ task.taskDateTo ? task.taskDateTo.format('d-m-Y') : 'Non définie' }}</span></p>
                                    </div>
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>

                <div class="kanban-column" data-column="en-cours">
                    <h3>En cours</h3>
                    <div class="kanban-tasks" data-column-id="en-cours">
                        {% for task in current_project.tasks %}
                            {% if task.taskColumnRank == 3 %}
                                <div class="task-card" id="task-{{ task.id }}" data-task-id="{{ task.id }}" data-rank="{{ task.taskRank }}" draggable="true" data-column="{{ task.taskColumnRank }}">
                                    <h4>{{ task.taskName }}</h4>
                                    <div class="task-info">
                                        <p><strong>Description :</strong> {{ task.taskDescription }}</p>
                                        <p><strong>Type :</strong> {{ task.taskType }}</p>
                                        <p><strong>Rang :</strong> {{ task.taskRank }}</p>
                                        <p><strong>Date de début :</strong> <span>{{ task.taskDateFrom ? task.taskDateFrom.format('d-m-Y') : 'Non définie' }}</span></p>
                                        <p><strong>Date de fin :</strong> <span>{{ task.taskDateTo ? task.taskDateTo.format('d-m-Y') : 'Non définie' }}</span></p>
                                    </div>
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>

                <div class="kanban-column" data-column="terminee">
                    <h3>Terminée</h3>
                    <div class="kanban-tasks" data-column-id="terminee">
                        {% for task in current_project.tasks %}
                            {% if task.taskColumnRank >= 4 %}
                                <div class="task-card" id="task-{{ task.id }}" data-task-id="{{ task.id }}" data-rank="{{ task.taskRank }}" draggable="true" data-column="{{ task.taskColumnRank }}">
                                    <h4>{{ task.taskName }}</h4>
                                    <div class="task-info">
                                        <p><strong>Description :</strong> {{ task.taskDescription }}</p>
                                        <p><strong>Type :</strong> {{ task.taskType }}</p>
                                        <p><strong>Rang :</strong> {{ task.taskRank }}</p>
                                        <p><strong>Date de début :</strong> <span>{{ task.taskDateFrom ? task.taskDateFrom.format('d-m-Y') : 'Non définie' }}</span></p>
                                        <p><strong>Date de fin :</strong> <span>{{ task.taskDateTo ? task.taskDateTo.format('d-m-Y') : 'Non définie' }}</span></p>
                                    </div>
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>

            {% else %}
                <p>Sélectionnez un projet pour voir les détails.</p>
            {% endif %}

            {# Formulaire de création de projet #}
            <div id="createProjectForm" style="display: none;" class="styled-form">
                {{ form_start(form) }}
                    {{ form_row(form.name) }}
                    {{ form_row(form.description) }}
                    {{ form_row(form.startDateForecast) }}
                    {{ form_row(form.endDateForecast) }}
                    <button type="submit" class="styled-button">Créer un nouveau projet</button>
                {{ form_end(form) }}
            </div>

            {# Messages flash #}
            {% for message in app.flashes('success') %}
                <div class="alert alert-success">
                    {{ message }}
                </div>
            {% endfor %}
    </main>
</div>

<div id="deletePopup" class="popup" style="display: none;">
    <div class="popup-content">
        <p>Êtes-vous sûr de vouloir supprimer ce projet ?</p>
        <button id="confirmDelete" class="confirm-button"><i class="fas fa-check"></i> Confirmer</button>
        <button id="cancelDelete" class="cancel-button"><i class="fas fa-times"></i> Annuler</button>
    </div>
</div>

<style>
    /* Style global du formulaire */
    .styled-form {
        background: #2C2C2C;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
        color: white;
        display: flex;
        flex-direction: column;
        gap: 15px; /* Augmentation de l'espace entre les éléments du formulaire */
        max-width: 100%;
        width: 100%;
        box-sizing: border-box;
    }

    /* Styles des champs de saisie (input, select, textarea) */
    .styled-form input, .styled-form select, .styled-form textarea {
        background: #444;
        border: none;
        padding: 12px;
        color: white;
        border-radius: 5px;
        margin-bottom: 15px; /* Ajout de l'espace entre le champ et le label */
        width: 100%;
        box-sizing: border-box;
    }

    /* Style des labels */
    .styled-form label {
        font-weight: bold;
        margin-bottom: 8px; /* Espacement entre le label et le champ */
    }

    /* Style du bouton */
    .styled-button {
        background-color: #249F84;
        border: none;
        color: white;
        padding: 10px 15px;
        cursor: pointer;
        border-radius: 5px;
        transition: background 0.3s ease;
        width: auto;
        align-self: flex-start;
    }

    /* Style du bouton au survol */
    .styled-button:hover {
        background-color: #1D8E75;
    }

    /* Responsivité pour les petits écrans */
    @media (max-width: 768px) {
        .styled-form {
            padding: 15px;
        }

        .styled-form input, .styled-form select, .styled-form textarea {
            padding: 10px;
        }

        .styled-button {
            width: 100%;
        }
    }

    /* Responsivité pour les très petits écrans */
    @media (max-width: 480px) {
        .styled-form {
            padding: 10px;
        }

        .styled-button {
            padding: 12px;
        }
    }
</style>

<style>
    .project-management-container {
        display: flex;
        background-color: #2C2C2C;
        color: #fff;
        height: 100vh;
    }

    .create-project-button {
        background-color: #249F84;
        border: none;
        color: white;
        padding: 10px 15px;
        margin-bottom: 10px;
        cursor: pointer;
        border-radius: 5px;
    }

    aside.project-list {
        background-color: #1D8E75;
        width: 250px;
        padding: 20px;
        overflow-y: auto;
        border-radius: 10px;
    }

    aside h3 {
        color: white;
        margin-bottom: 20px;
    }

    aside ul {
        list-style: none;
        padding: 0;
    }

    aside ul li {
        margin-bottom: 10px;
        padding: 10px;
        background-color: #249F84;
        border-radius: 5px;
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    aside ul li.active {
        background-color: #249F84;
        border: 2px solid #00FFCC;
    }

    aside ul li a {
        color: white;
        text-decoration: none;
        flex-grow: 1;
    }

    .delete-button {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        padding: 0;
        margin-left: 10px;
    }

    .delete-icon {
        width: 25px;
        height: 25px;
    }

    main.project-details {
        flex-grow: 1;
        padding: 40px;
        background-color: #3C3C3C;
        border-radius: 10px;
    }

    main h2 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    main p {
        font-size: 18px;
        margin-bottom: 20px;
    }

    .project-dates {
        display: flex;
        justify-content: space-between;
        font-size: 14px;
        margin-bottom: 30px;
    }

    .project-dates div {
        display: flex;
        flex-direction: column;
    }

    .project-dates span {
        margin-bottom: 5px;
    }

    .project-dates .real {
        color: #00FFCC;
    }

    .project-stats {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
    }

    .project-stat-block {
        background-color: #444;
        height: 150px;
        border-radius: 5px;
    }

    .alert {
        padding: 10px;
        margin-top: 20px;
        background-color: #249F84;
        color: white;
        border-radius: 5px;
    }

    /* Style global de la popup */
    .popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6); /* Fond semi-transparent pour l'arrière-plan */
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 1000; /* S'assurer que la popup est au-dessus du contenu */
        padding: 10px;
        box-sizing: border-box;
    }

    /* Contenu de la popup */
    .popup-content {
        background: #2C2C2C;
        padding: 20px;
        border-radius: 8px;
        width: 100%;
        max-width: 400px; /* Largeur max pour garder la popup compacte */
        color: white;
        text-align: center;
        box-sizing: border-box;
    }

    /* Style du texte dans la popup */
    .popup-content p {
        font-size: 18px;
        margin-bottom: 20px;
    }

    /* Style des boutons de confirmation et d'annulation */
    .confirm-button, .cancel-button {
        background-color: #249F84;
        border: none;
        color: white;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 5px;
        margin: 5px;
        transition: background 0.3s ease;
        font-size: 16px;
    }

    /* Bouton de confirmation au survol */
    .confirm-button:hover {
        background-color: #1D8E75;
    }

    /* Bouton d'annulation au survol */
    .cancel-button:hover {
        background-color: #E74C3C;
    }

    /* Responsivité pour les petits écrans */
    @media (max-width: 768px) {
        .popup-content {
            padding: 15px;
            max-width: 90%; /* Ajuster la largeur sur petits écrans */
        }

        .confirm-button, .cancel-button {
            width: 100%;
            padding: 12px;
        }
    }

    /* Responsivité pour les très petits écrans */
    @media (max-width: 480px) {
        .popup-content {
            max-width: 95%;
            padding: 10px;
        }

        .confirm-button, .cancel-button {
            padding: 10px;
        }
    }


    .confirm-button, .cancel-button {
        margin: 10px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .confirm-button {
        background-color: #28a745;
        color: white;
    }

    .cancel-button {
        background-color: #dc3545;
        color: white;
    }

    .task-cards {
    display: flex;
    flex-wrap: wrap;
    gap: 16px; /* Espace entre les cartes */
    }

    .task-card {
        flex: 1 1 calc(20% - 16px); /* 20% pour 5 cartes par ligne */
        box-sizing: border-box;
        border: 1px solid #ddd;
        padding: 16px;
        background-color: #3C3C3C;
        border-radius: 4px;
    }

    .task-card {
        background-color: #3C3C3C;
        border: 2px solid #fff; /* White border */
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        padding: 30px;
        margin: 30px auto;
        max-width: 800px;
        font-family: 'Arial', sans-serif;
        color: #fff;
    }

    .task-card h1 {
        font-size: 26px;
        color: #00FFCC; /* Greenish color for the title */
        margin-bottom: 20px;
        font-weight: bold;
    }

    .task-info p {
        font-size: 18px;
        margin: 12px 0;
        color: black; /* White color for text */
    }

    .task-info strong {
        color: #00FFCC; /* Greenish color for strong labels */
    }

    .task-info p span {
        font-weight: bold;
        color: black;
    }

    .task-info p:last-child {
        margin-bottom: 0;
    }

    .clearfix {
    clear: both;
    }

.kanban-board {
    display: flex;
    flex-direction: row;  /* Disposition horizontale des colonnes */
    gap: 20px; /* Espacement entre les colonnes */
    align-items: flex-start; /* Aligner les colonnes en haut */
    padding: 20px;
    min-height: 100vh;
}

.kanban-column {
    background-color: #3C3C3C;
    border-radius: 10px;
    padding: 20px;
    width: 90%; /* Largeur ajustée pour s'adapter à l'écran */
    max-width: 400px;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
    text-align: center;
    display: flex;
    flex-direction: column;
}

.kanban-column h2 {
    color: #00FFCC;
    margin-bottom: 15px;
}

.kanban-tasks {
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding: 10px;
    max-height: 800px; /* Limite la hauteur de la zone des tâches */
    overflow-y: auto; /* Active le défilement vertical si nécessaire */
}

.kanban-task {
    background-color: #444;
    padding: 15px;
    border-radius: 5px;
    color: white;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    text-align: left;
}

.task-card {
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 10px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.task-card h4 {
    font-size: 16px;
    margin-bottom: 5px;
    color: #222;
}

.task-info p {
    font-size: 14px;
    margin: 2px 0;
}

/* Boutons */
.add-column-button, .add-task-button {
    display: inline-block;
    margin-top: 20px;
    padding: 10px 15px;
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s ease;
}

.add-column-button:hover, .add-task-button:hover {
    background-color: #0056b3;
}

</style>

<script>
    function showCreateForm() {
        document.getElementById('createProjectForm').style.display = 'block';
    }

    function showCreateTaskForm() {
        document.getElementById('createTaskForm').style.display = 'block';
    }

    document.addEventListener('DOMContentLoaded', function () {
        let projectIdToDelete;

        window.showDeletePopup = function (projectId) {
            projectIdToDelete = projectId;
            document.getElementById('deletePopup').style.display = 'flex';
        };

        document.getElementById('confirmDelete').onclick = function () {
            if (!projectIdToDelete) {
                console.error('Aucun ID de projet à supprimer.');
                return;
            }

            const form = document.createElement('form');
            form.method = 'post';
            form.action = "{{ path('app_project_delete', { 'id': '0' }) }}".replace('0', projectIdToDelete);

            document.body.appendChild(form);
            form.submit();
        };

        document.getElementById('cancelDelete').onclick = function () {
            document.getElementById('deletePopup').style.display = 'none';
        };
    });
</script>
<script>
    function showTaskForm() {
        document.getElementById('createTaskForm').style.display = 'block';
    }

    function showCreateForm() {
        document.getElementById('createProjectForm').style.display = 'block';
    }

    function showDeletePopup(projectId) {
        const deletePopup = document.getElementById('deletePopup');
        deletePopup.style.display = 'block';

        document.getElementById('confirmDelete').onclick = function () {
            window.location.href = `/delete-project/${projectId}`;
        };

        document.getElementById('cancelDelete').onclick = function () {
            deletePopup.style.display = 'none';
        };
    }
</script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const columns = document.querySelectorAll('.kanban-column');
    const tasksContainers = document.querySelectorAll('.kanban-tasks');
    let draggedItem = null;

    document.querySelectorAll('.task-card').forEach(task => {
        task.addEventListener('dragstart', handleDragStart);
        task.addEventListener('dragend', handleDragEnd);
    });

    columns.forEach(column => {
        column.addEventListener('dragover', handleDragOver);
        column.addEventListener('drop', handleDrop);
    });

    tasksContainers.forEach(container => {
        container.addEventListener('dragover', handleDragOver);
        container.addEventListener('drop', handleDrop);
        container.addEventListener('dragenter', function (e) {
            e.preventDefault();
            this.classList.add('drag-over');
        });
        container.addEventListener('dragleave', function (e) {
            e.preventDefault();
            this.classList.remove('drag-over');
        });
    });

    function handleDragStart(e) {
        draggedItem = this;
        e.dataTransfer.setData('text/plain', this.getAttribute('data-task-id'));
        setTimeout(() => {
            this.style.opacity = '0.5';
        }, 0);
    }

    function handleDragEnd() {
        this.style.opacity = '1';
        document.querySelectorAll('.drag-over').forEach(element => {
            element.classList.remove('drag-over');
        });
    }

    function handleDragOver(e) {
        e.preventDefault();
    }

    function handleDrop(e) {
        e.preventDefault();
        e.stopPropagation();

        const taskContainer = this.querySelector('.kanban-tasks') || this;
        const columnStatus = this.getAttribute('data-column');
        const taskId = e.dataTransfer.getData('text/plain');
        const task = document.querySelector(`.task-card[data-task-id="${taskId}"]`);

        if (!task) return;

        const y = e.clientY;
        const sibling = [...taskContainer.querySelectorAll('.task-card:not([data-task-id="' + taskId + '"])')].find(sibling => {
            const box = sibling.getBoundingClientRect();
            return y <= box.top + box.height / 2;
        });

        if (sibling) {
            taskContainer.insertBefore(task, sibling);
        } else {
            taskContainer.appendChild(task);
        }

        const tasksInColumn = taskContainer.querySelectorAll('.task-card');
        const taskIds = Array.from(tasksInColumn).map((taskElement, index) => ({
            id: taskElement.getAttribute('data-task-id'),
            rank: index + 1
        }));

        fetch('/management-project/update-task-position', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
                taskId, 
                newColumn: columnStatus, 
                taskOrder: taskIds 
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    displayError(data.error);
                } else {
                    console.log('Mise à jour réussie:', data.success);
                }
            })
            .catch(error => {
                displayError('Erreur de connexion au serveur.');
                console.error('Erreur:', error);
            });
    }

    function displayError(message) {
        let errorBox = document.querySelector('.error-box');
        if (!errorBox) {
            errorBox = document.createElement('div');
            errorBox.className = 'error-box';
            document.body.appendChild(errorBox);
        }
        errorBox.innerText = message;
        errorBox.style.display = 'block';
        setTimeout(() => {
            errorBox.style.display = 'none';
        }, 3000);
    }
});
</script>


{% endblock %}
