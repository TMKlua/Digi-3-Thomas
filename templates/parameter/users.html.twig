{% extends 'base.html.twig' %}

{% block title %}Digi-3 - Gestion des utilisateurs{% endblock %}

{% block body %}
{% include 'includes/header.html.twig' with {'user': user} %}

<section class="parameter_landing flex">
    {% include 'parameter/_menu.html.twig' %}
    <div class="parameter_content">
        <div class="users-page">
            <div class="users-header flex">
                <h2>Gestion des utilisateurs</h2>
                <button id="toggleAddUserForm" class="btn-add">
                    Ajouter un utilisateur
                </button>
            </div>

            {% for message in app.flashes('success') %}
                <div class="alert-success">{{ message }}</div>
            {% endfor %}
            {% for message in app.flashes('error') %}
                <div class="alert-error">{{ message }}</div>
            {% endfor %}

            <!-- Form that appears only when the button is clicked -->
            <div id="addUserFormContainer" class="add-user-form-container" style="display: none;">
                <form id="addUserForm" class="user-form">
                    <div class="form-group">
                        <label for="firstName">Prénom</label>
                        <input type="text" id="firstName" name="firstName" required>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Nom</label>
                        <input type="text" id="lastName" name="lastName" required>
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-group">
                        <label for="role">Rôle</label>
                        <select id="role" name="role" required>
                            <option class="role-badge role-admin" value="ROLE_ADMIN">Administrateur</option>
                            <option class="role-badge role-manager" value="ROLE_MANAGER">Manager</option>
                            <option class="role-badge role-lead-dev" value="ROLE_LEAD_DEV">Lead Développeur</option>
                            <option class="role-badge role-dev" value="ROLE_DEV">Développeur</option>
                            <option class="role-badge role-user" value="ROLE_USER">Utilisateur</option>
                        </select>
                    </div>
                    <div class="form-actions">
                        <button type="button" class="btn-cancel" id="cancelAddUser">Annuler</button>
                        <button type="button" class="btn-submit" id="saveNewUser">Enregistrer</button>
                    </div>
                </form>
            </div>

            <div class="users-table">
                <table>
                    <thead>
                        <tr>
                            <th>Avatar</th>
                            <th>Nom</th>
                            <th>Prénom</th>
                            <th>Email</th>
                            <th>Rôle</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for user in users %}
                            <tr>
                                <td>
                                    <img src="{{ asset(user.userAvatar) }}" alt="Avatar" class="user-avatar" style="height: 50px; width: 50px; object-fit: cover;">
                                </td>
                                <td>{{ user.userLastName }}</td>
                                <td>{{ user.userFirstName }}</td>
                                <td>{{ user.userEmail }}</td>
                                <td>
                                    <span class="role-badge {% if user.userRole == 'ROLE_ADMIN' %}role-admin{% else %}role-user{% endif %}">
                                        {{ user.userRole == 'ROLE_ADMIN' ? 'Admin' : 'User' }}
                                    </span>
                                </td>
                                <td class="actions">
                                    <button class="btn-edit edit-user" 
                                            data-user-id="{{ user.id }}"
                                            data-bs-toggle="modal" 
                                            data-bs-target="#editUserModal">
                                        <i class="fas fa-edit" style="font-size: 30px;"></i> <!-- Icône d'édition -->
                                    </button>
                                    <button class="btn-delete delete-user" 
                                            data-user-id="{{ user.id }}"
                                            data-bs-toggle="modal" 
                                            data-bs-target="#deleteUserModal">
                                        <i class="fas fa-trash-alt" style="font-size: 30px;"></i> <!-- Icône de suppression -->
                                    </button>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="6" class="no-data">Aucun utilisateur trouvé</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

{% endblock %}


{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle Add User Form visibility
        document.getElementById('toggleAddUserForm').addEventListener('click', function() {
            const formContainer = document.getElementById('addUserFormContainer');
            formContainer.style.display = 'block';
        });

        // Hide form when cancel button is clicked
        document.getElementById('cancelAddUser').addEventListener('click', function() {
            const formContainer = document.getElementById('addUserFormContainer');
            formContainer.style.display = 'none';
            document.getElementById('addUserForm').reset();
        });

        // Toggle Delete User Modal visibility
        let userToDelete = null;
        
        document.querySelectorAll('.delete-user').forEach(button => {
            button.addEventListener('click', function() {
                userToDelete = this.dataset.userId;
                const deleteUserModal = document.getElementById('deleteUserModal');
                if (deleteUserModal) {
                    new bootstrap.Modal(deleteUserModal).show();
                }
            });
        });

        document.getElementById('confirmDelete').addEventListener('click', function() {
            if (userToDelete) {
                fetch(`{{ path('app_parameter_user_delete', {'id': '__id__'}) }}`.replace('__id__', userToDelete), {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Une erreur est survenue lors de la suppression');
                });
            }
        });

        // Add User
        document.getElementById('saveNewUser').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('addUserForm'));
            
            fetch('{{ path('app_parameter_user_add') }}', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Une erreur est survenue lors de l\'ajout de l\'utilisateur');
            });
        });
    });
</script>
{% endblock %}

{% block stylesheets %}
<style>
 /* Styles de base */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.parameter_landing {
    display: flex;
    flex-wrap: wrap;
}

.parameter_content {
    flex: 1;
    padding: 20px;
    min-width: 300px;
}

/* Table responsive */
.users-table table {
    width: 100%;
    border-collapse: collapse;
}

.users-table th, .users-table td {
    padding: 10px;
    border: 1px solid #ddd;
    text-align: left;
}

.users-table img {
    max-width: 100%;
    height: auto;
}

/* Formulaire responsive */
.user-form {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.form-group {
    display: flex;
    flex-direction: column;
}

.form-group input, .form-group select {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

/* Boutons responsive */
.btn-add, .btn-cancel, .btn-submit {
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    font-weight: bold;
    cursor: pointer;
    text-align: center;
}

.btn-add {
    background-color: #4CAF50;
    color: white;
}

.btn-cancel {
    background-color: #f44336;
    color: white;
}

.btn-submit {
    background-color: #008CBA;
    color: white;
}

/* Média queries pour le responsive */
@media screen and (max-width: 768px) {
    .users-header {
        flex-direction: column;
        align-items: flex-start;
    }

    .btn-add {
        width: 100%;
        margin-top: 10px;
    }

    .users-table table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }

    .users-table th, .users-table td {
        display: block;
        text-align: center;
    }

    .form-actions {
        flex-direction: column;
    }

    .btn-cancel, .btn-submit {
        width: 100%;
        margin-top: 5px;
    }
}

@media screen and (max-width: 480px) {
    .parameter_landing {
        flex-direction: column;
    }

    .users-table th, .users-table td {
        font-size: 14px;
    }

    .btn-add, .btn-cancel, .btn-submit {
        font-size: 14px;
        padding: 8px 12px;
    }
}

/* Styles des badges pour les rôles */
.role-badge {
    display: inline-block;
    padding: 5px 10px;
    border-radius: 12px;
    font-size: 14px;
    font-weight: bold;
    text-align: center;
    color: white;
}

/* Couleurs spécifiques par rôle */
.role-admin {
    background-color: #e74c3c; /* Rouge pour admin */
}

.role-manager {
    background-color: #f39c12; /* Orange pour manager */
}

.role-lead-dev {
    background-color: #9b59b6; /* Violet pour lead developer */
}

.role-dev {
    background-color: #3498db; /* Bleu pour developer */
}

.role-user {
    background-color: #2ecc71; /* Vert pour user */
}

</style>
{% endblock %}