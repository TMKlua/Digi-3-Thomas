{% extends 'base.html.twig' %}
{% block title %}Digi-3 - Page d'authentification{% endblock %}

{% block stylesheets %}
    <style>
        /* Styles pour la modale */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            overflow: auto;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: #1a1a1a;
            color: #fff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
            max-width: 450px;
            width: 100%;
            position: relative;
            animation: modalFadeIn 0.4s ease-out;
            border: 1px solid #333;
        }


        @keyframes modalFadeIn {
            from {opacity: 0; transform: translateY(-20px) scale(0.95);}
            to {opacity: 1; transform: translateY(0) scale(1);}
        }

        .modal-content h2 {
            margin-top: 0;
            margin-bottom: 20px;
            color: #fff;
            font-size: 24px;
            text-align: center;
            border-bottom: 1px solid #333;
            padding-bottom: 15px;
        }

        .close {
            position: absolute;
            right: 15px;
            top: 15px;
            font-size: 26px;
            font-weight: normal;
            cursor: pointer;
            color: #999;
            transition: color 0.2s ease, transform 0.2s ease;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

        .close:hover {
            color: #fff;
            transform: rotate(90deg);
            background-color: rgba(255, 255, 255, 0.1);
        }

        /* Styles pour le formulaire de réinitialisation */
        #resetPasswordForm {
            margin-top: 20px;
        }

        #resetPasswordForm label {
            display: block;
            margin-bottom: 8px;
            color: #ccc;
            font-size: 14px;
        }

        #resetPasswordForm input[type="email"] {
            width: 100%;
            padding: 12px;
            border: 1px solid #333;
            border-radius: 6px;
            background-color: #252525;
            color: #fff;
            font-size: 16px;
            margin-bottom: 20px;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        #resetPasswordForm input[type="email"]:focus {
            border-color: #5c6bc0;
            box-shadow: 0 0 0 2px rgba(92, 107, 192, 0.3);
            outline: none;
        }

        #resetPasswordForm button {
            width: 100%;
            padding: 12px;
            background-color: #5c6bc0;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: background-color 0.3s ease;
        }

        #resetPasswordForm button:hover {
            background-color: #4a5bbc;
        }

        #resetPasswordResponse {
            margin-top: 20px;
            padding: 15px;
            border-radius: 6px;
            font-size: 14px;
            text-align: center;
        }

        #resetPasswordResponse.success {
            background-color: rgba(76, 175, 80, 0.2);
            color: #81c784;
            border: 1px solid #43a047;
        }

        #resetPasswordResponse.error {
            background-color: rgba(244, 67, 54, 0.2);
            color: #e57373;
            border: 1px solid #e53935;
        }

        /* Styles pour les contrôles de mot de passe */
        .password-container {
            position: relative;
            width: 100%;
        }

        .toggle-password {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
        }

        .forgot-password-link {
            display: block;
            text-align: right;
            margin: 5px 0 15px;
            color: #5c6bc0;
            text-decoration: none;
            font-size: 14px;
        }

        .forgot-password-link:hover {
            text-decoration: underline;
            color: #7986cb;
        }
    </style>
{% endblock %}

{% block body %}
<div class="auth-container">
  <!-- Section de connexion -->
  <div class="auth-section flex" id="loginSection" style="display: none">
    <form id="login_form" method="POST" action="{{ path('app_auth') }}">
      <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}" />
      <input type="hidden" name="action" value="login" />

      <label for="login_email">Email</label>
      <input type="email" id="login_email" name="email" required />

      <label for="login_password">Mot de passe</label>
      <div class="password-container">
        <input type="password" id="login_password" name="password" required />
        <span class="toggle-password" onclick="togglePasswordVisibility('login_password')">
          <img src="/img/icons/eye.png" alt="Afficher/Masquer le mot de passe" style="width: 15px; height: 15px;">
        </span>
      </div>

    <a href="#" id="forgotPasswordLink" style="color: white;" class="forgot-password-link">Mot de passe oublié ?</a>

      {% if error %}
      <div class="error" role="alert" style="color: red; margin-top: 10px;">{{ error }}</div>
      {% endif %}

      <button type="submit" class="auth-submit">Se connecter</button>
    </form>
    <div class="auth-decorate flex-col">
      <h3>Bonjour mon ami !</h3>
      <p>
        Entrez vos informations personnelles et commencez l'aventure avec nous
      </p>
      <a href="" id="switchToRegister">S'inscrire</a>
    </div>
  </div>

  <!-- Section d'inscription -->
  <div class="auth-section flex" id="registerSection">
    <div class="auth-decorate flex-col">
      <h3>Content de te revoir !</h3>
      <p>
        Pour rester dans l'aventure avec nous, connectez-vous avec vos informations personnelles.
      </p>
      <a href="" id="switchToLogin">Se connecter</a>
    </div>
    <form id="register_form" method="POST" action="{{ path('app_register') }}">
      <input type="hidden" name="csrf_token" value="{{ csrf_token('authenticate') }}" />
      <input type="hidden" name="action" value="register" />

      <label for="first_name">Prénom :</label>
      <input type="text" id="first_name" name="first_name" required />

      <label for="last_name">Nom :</label>
      <input type="text" id="last_name" name="last_name" required />

      <label for="register_email">Email</label>
      <input type="email" id="register_email" name="email" required />

      <label for="register_password">Mot de passe</label>
      <div class="password-container">
        <input type="password" id="register_password" name="password" required />
        <span class="toggle-password" onclick="togglePasswordVisibility('register_password')">
          <img src="/img/icons/eye.png" alt="Afficher/Masquer le mot de passe" style="width: 15px; height: 15px;">
        </span>
      </div>

      <div id="passwordStrengthBar" style="height: 4px; width: 50%; background-color: #e0e0e0; margin-top: 10px; opacity: 0; transition: opacity 0.5s;">
        <div id="passwordStrength" style="height: 100%; width: 0; background-color: red;"></div>
      </div>

      <div id="passwordErrorContainer"></div>

      {% if error %}
      <div class="error" role="alert" style="color: red; margin-top: 10px;">{{ error }}</div>
      {% endif %}

      <button type="submit" class="auth-submit">S'inscrire</button>
    </form>
  </div>
</div>

<!-- Modale de réinitialisation -->
<div id="resetPasswordModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Réinitialisation du mot de passe</h2>
        <form id="resetPasswordForm" method="POST" action="/forgot-password">
            <label for="reset_email">Email</label>
            <input type="email" id="reset_email" name="email" required>
            <button type="submit" class="auth-submit">Envoyer le lien</button>
        </form>
        <div id="resetPasswordResponse" style="margin-top: 15px; padding: 10px; display: none;"></div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
<script>
document.addEventListener("DOMContentLoaded", function () {
    const forgotPasswordLink = document.getElementById("forgotPasswordLink");
    const resetPasswordModal = document.getElementById("resetPasswordModal");
    const closeModal = document.querySelector(".modal .close");
    const resetPasswordForm = document.getElementById("resetPasswordForm");
    const resetPasswordResponse = document.getElementById("resetPasswordResponse");

    // Afficher la modale
    function showModal() {
        const modal = document.querySelector('.modal');
        modal.style.display = 'flex'; // Affiche la modale avec display: flex pour la centrer
    }

    // Masquer la modale
    function hideModal() {
        const modal = document.querySelector('.modal');
        modal.style.display = 'none'; // Cache la modale
    }

    // Fonction pour fermer la modale
    function closeModalFunc() {
        resetPasswordModal.style.display = "none";
        resetPasswordResponse.style.display = "none";
        resetPasswordResponse.innerHTML = "";
    }

    // Afficher la modale quand on clique sur "Mot de passe oublié"
    forgotPasswordLink.addEventListener("click", function (event) {
        event.preventDefault();
        showModal();
    });

    // Fermer la modale quand on clique sur la croix
    closeModal.addEventListener("click", closeModalFunc);

    // Fermer la modale si on clique en dehors de son contenu
    window.addEventListener("click", function (event) {
        if (event.target === resetPasswordModal) {
            closeModalFunc();
        }
    });
    
    // Empêcher la fermeture de la modale quand on clique dedans
    resetPasswordModal.querySelector(".modal-content").addEventListener("click", function(event) {
        event.stopPropagation();
    });
    
    // Intercepter la soumission du formulaire de réinitialisation
    resetPasswordForm.addEventListener("submit", function(event) {
        event.preventDefault();
        
        const formData = new FormData(resetPasswordForm);
        
        fetch(resetPasswordForm.action, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            resetPasswordResponse.style.display = "block";
            if (data.success) {
                resetPasswordResponse.innerHTML = `<div style="color: green;">${data.message}</div>`;
                resetPasswordForm.reset();
            } else {
                resetPasswordResponse.innerHTML = `<div style="color: red;">${data.message}</div>`;
            }
        })
        .catch(error => {
            resetPasswordResponse.style.display = "block";
            resetPasswordResponse.innerHTML = `<div style="color: red;">Une erreur s'est produite. Veuillez réessayer.</div>`;
            console.error('Error:', error);
        });
    });
    
    // Fonction pour basculer la visibilité du mot de passe
    window.togglePasswordVisibility = function(inputId) {
        const passwordInput = document.getElementById(inputId);
        if (passwordInput.type === "password") {
            passwordInput.type = "text";
        } else {
            passwordInput.type = "password";
        }
    };
});
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Éléments DOM
    const loginSection = document.getElementById("loginSection");
    const registerSection = document.getElementById("registerSection");
    const switchToRegister = document.getElementById("switchToRegister");
    const switchToLogin = document.getElementById("switchToLogin");
    const registerForm = document.getElementById("register_form");
    const passwordInput = document.getElementById("register_password");
    const passwordStrengthBar = document.getElementById("passwordStrengthBar");
    const passwordStrength = document.getElementById("passwordStrength");
    const passwordErrorContainer = document.getElementById("passwordErrorContainer");

    // Fonction pour basculer la visibilité du mot de passe
    window.togglePasswordVisibility = function(inputId) {
        const passwordInput = document.getElementById(inputId);
        const icon = passwordInput.parentElement.querySelector('.toggle-password img');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.src = '/img/icons/eye-off.png'; // Change l'icône si tu en as une différente
        } else {
            passwordInput.type = 'password';
            icon.src = '/img/icons/eye.png';
        }
    }

function validatePassword(password) {
        const constraints = {
            minLength: 8,
            requireSpecialChar: true,
            requireNumber: true,
            requireUppercase: true
        };

        const errors = [];

        if (password.length < constraints.minLength) {
            errors.push('Le mot de passe doit contenir au moins 8 caractères');
        }

        if (constraints.requireSpecialChar && !/[^a-zA-Z\d]/.test(password)) {
            errors.push('Le mot de passe doit contenir au moins un caractère spécial');
        }

        if (constraints.requireNumber && !/\d/.test(password)) {
            errors.push('Le mot de passe doit contenir au moins un chiffre');
        }

        if (constraints.requireUppercase && !/[A-Z]/.test(password)) {
            errors.push('Le mot de passe doit contenir au moins une majuscule');
        }

        return errors;
    }

    function checkPassword() {
        const password = document.getElementById("password").value;
        const errors = validatePassword(password);
        const errorContainer = document.getElementById("passwordErrors");
        
        // Affichage des erreurs
        if (errors.length > 0) {
            errorContainer.innerHTML = errors.join('<br>');
        } else {
            errorContainer.innerHTML = '';
        }
    }

    // Fonction pour évaluer la force du mot de passe
    function updatePasswordStrength(password) {
        let strength = 0;

        if (password.length >= 8) strength++;
        if (/[A-Z]/.test(password)) strength++;
        if (/\d/.test(password)) strength++;
        if (/[^a-zA-Z\d]/.test(password)) strength++;

        const width = (strength / 4) * 100;
        passwordStrength.style.width = width + "%";

        // Ajout de la transition de couleur directement dans le JavaScript
        passwordStrength.style.transition = "background-color 0.5s ease";  // Transition de couleur fluide

        // Logique pour changer la couleur de la barre en fonction de la force du mot de passe
        if (strength === 0) {
            passwordStrength.style.backgroundColor = "red";
        } else if (strength === 1) {
            passwordStrength.style.backgroundColor = "orange";
        } else if (strength === 2) {
            passwordStrength.style.backgroundColor = "yellow";
        } else {
            passwordStrength.style.backgroundColor = "green";
        }
        
        // Afficher la barre avec un fondu
        passwordStrengthBar.style.opacity = (password.length > 0) ? 1 : 0;
    }

    // Validation en temps réel du mot de passe
    passwordInput.addEventListener('input', function() {
        const password = this.value;
        const errors = validatePassword(password);

        // Afficher la force du mot de passe
        updatePasswordStrength(password);

        // Supprimer les messages d'erreur existants
        passwordErrorContainer.innerHTML = "";

        if (errors.length > 0) {
            const errorContainer = document.createElement('div');
            errorContainer.className = 'password-error';
            errorContainer.style.color = 'red';
            errorContainer.style.marginTop = '5px';
            errorContainer.innerHTML = errors.join('<br>');
            passwordErrorContainer.appendChild(errorContainer);
        }
    });

    // Gestion du formulaire d'inscription
    registerForm.addEventListener("submit", function (event) {
        event.preventDefault();
        const password = passwordInput.value;
        const passwordErrors = validatePassword(password);

        if (passwordErrors.length > 0) {
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error';
            errorDiv.style.color = 'red';
            errorDiv.textContent = passwordErrors.join(', ');
            this.insertBefore(errorDiv, this.firstChild);
            return;
        }

        const submitButton = this.querySelector('button[type="submit"]');
        submitButton.disabled = true;
        submitButton.innerHTML = 'Inscription en cours...';

        const formData = new FormData(this);

        fetch('{{ path('app_register') }}', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                submitButton.innerHTML = 'Inscription réussie !';
                submitButton.style.backgroundColor = '#4CAF50';
                setTimeout(() => {
                    window.location.href = data.redirect;
                }, 1000);
            } else {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'error';
                errorDiv.style.color = 'red';
                errorDiv.textContent = data.errors;
                this.insertBefore(errorDiv, this.firstChild);
            }
        })
        .catch(error => {
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error';
            errorDiv.style.color = 'red';
            errorDiv.textContent = 'Une erreur est survenue. Veuillez réessayer.';
            this.insertBefore(errorDiv, this.firstChild);
        });
    });

    // Gestion des sections login/register
    switchToRegister.addEventListener("click", function (e) {
        e.preventDefault();
        loginSection.style.display = "none";
        registerSection.style.display = "flex";
    });

    switchToLogin.addEventListener("click", function (e) {
        e.preventDefault();
        registerSection.style.display = "none";
        loginSection.style.display = "flex";
    });
  });
</script>
{% endblock %}
